# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build Scum Bag Debug

on:
  workflow_dispatch:

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'npm'

    - run: npm install

    - run: npm run build

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Build Release
      if: matrix.platform == 'windows-latest'
      run: dotnet publish -c Release -r win-x64 --self-contained true -p:PublishTrimmed=True -p:TrimMode=Full -p:PublishAot=true -p:AssemblyName=ScumBag
    
    - name: Build Release
      if: matrix.platform == 'ubuntu-latest'
      run: dotnet publish -c Release -r linux-x64 --self-contained true -p:PublishTrimmed=True -p:TrimMode=Full -p:PublishAot=true -p:AssemblyName=ScumBag

    - name: Build Release
      if: matrix.platform == 'macos-latest'
      run: dotnet publish -c Release -r osx-x64 --self-contained true -p:PublishTrimmed=True -p:TrimMode=Full -p:PublishAot=true -p:AssemblyName=ScumBag

    # Windows: Create artifact with specific files
    - name: Prepare Windows Artifacts
      if: matrix.platform == 'windows-latest'
      run: |
        mkdir artifact
        copy ".\bin\Release\net8.0\win-x64\publish\ScumBag.exe" artifact\
        copy ".\bin\Release\net8.0\win-x64\publish\webview.dll" artifact\
        copy ".\bin\Release\net8.0\win-x64\publish\nfd.dll" artifact\
      shell: cmd

    - name: Archive Windows Artifacts
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: Scum_Bag_win-x64
        path: artifact/*

    # Linux: Create artifact with specific files
    - name: Prepare Linux Artifacts
      if: matrix.platform == 'ubuntu-latest'
      run: |
        mkdir artifact
        cp "./bin/Release/net8.0/linux-x64/publish/ScumBag" artifact/
        cp ./bin/Release/net8.0/linux-x64/publish/libwebview.so artifact/ || cp ./bin/Release/net8.0/linux-x64/publish/webview.so artifact/ || true
        cp ./bin/Release/net8.0/linux-x64/publish/libnfd.so artifact/ || cp ./bin/Release/net8.0/linux-x64/publish/nfd.so artifact/ || true

    - name: Archive Linux Artifacts
      if: matrix.platform == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: Scum_Bag_linux-x64
        path: artifact/*

    # macOS: Create artifact with specific files
    - name: Prepare macOS Artifacts
      if: matrix.platform == 'macos-latest'
      run: |
        mkdir artifact
        cp "./bin/Release/net8.0/osx-x64/publish/ScumBag" artifact/
        cp ./bin/Release/net8.0/osx-x64/publish/libwebview.dylib artifact/ || cp ./bin/Release/net8.0/osx-x64/publish/webview.dylib artifact/ || true
        cp ./bin/Release/net8.0/osx-x64/publish/libnfd.dylib artifact/ || cp ./bin/Release/net8.0/osx-x64/publish/nfd.dylib artifact/ || true

    - name: Archive macOS Artifacts
      if: matrix.platform == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: Scum_Bag_osx-x64
        path: artifact/*
